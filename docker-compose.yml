version: '2.3'
services:
  mtproxy:
    container_name: mtproxy
    build: .
    image: mtproxy:python
    restart: unless-stopped
    volumes:
      - ./config.py:/home/tgproxy/config.py
      - ./mtprotoproxy.py:/home/tgproxy/mtprotoproxy.py
    networks:
      backend:
        ipv6_address: 2a01:4f8:1c0c:6667::10
  mtproxy1:
    container_name: mtproxy1
    build: .
    image: mtproxy:python
    restart: unless-stopped
    volumes:
      - ./config.py:/home/tgproxy/config.py
      - ./mtprotoproxy.py:/home/tgproxy/mtprotoproxy.py
    networks:
      backend:
        ipv6_address: 2a01:4f8:1c0c:6667::11
#  mtproxy2:
#    container_name: mtproxy2
#    build: .
#    image: mtproxy:python
#    restart: unless-stopped
#    volumes:
#      - ./config.py:/home/tgproxy/config.py
#      - ./mtprotoproxy.py:/home/tgproxy/mtprotoproxy.py
#    networks:
#      backend:
#        ipv6_address: 2a01:4f8:1c0c:6667::12
  web:
    container_name: mtproxy-web
    image: nginx:alpine
    volumes:
      - ./index.html:/var/www/index.html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/mtproxy-tls.sharik.network/fullchain.pem:/etc/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/mtproxy-tls.sharik.network/privkey.pem:/etc/ssl/privkey.pem:ro
    networks:
      backend:
        ipv6_address: 2a01:4f8:1c0c:6667::3
    restart: unless-stopped
  proxy:
    container_name: mtproxy-proxy
    image: haproxy:alpine
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      backend:
        ipv6_address: 2a01:4f8:1c0c:6667::2
networks:
  backend:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 2a01:4f8:1c0c:6667::/80
          gateway: 2a01:4f8:1c0c:6667::1
